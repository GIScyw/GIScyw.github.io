{"componentChunkName":"component---src-templates-blog-post-js","path":"/new-beginnings copy/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"630c83d8-ab10-56c6-8445-2a918839516d","excerpt":"适用场景分析 小的活动、简单的中后台，这种不会长期迭代的项目，用tw还是比较爽的，能很大提高dx，主要就是不用在css和HTML文件之间跳来跳去，而且也不用花时间为classname起名字，还是很推荐的 复杂程度较高的项目和长期迭代的项目，还是不建议使用tw， 后期维护性会越来越差 具有设计规范的场景，tw…","html":"<h3>适用场景分析</h3>\n<ol>\n<li>小的活动、简单的中后台，这种不会长期迭代的项目，用tw还是比较爽的，能很大提高dx，主要就是不用在css和HTML文件之间跳来跳去，而且也不用花时间为classname起名字，还是很推荐的</li>\n<li>复杂程度较高的项目和长期迭代的项目，还是不建议使用tw， 后期维护性会越来越差</li>\n<li>具有设计规范的场景，tw完善的设计规范结合自定义配置让我们脱离TailWind CSS开发, 所以说ts更是一套设计系统，这点的价值是很大的</li>\n</ol>\n<h3>最佳实践</h3>\n<ol>\n<li><strong>全局的修改</strong>可以通过配置theme，也就是说所有 tailwind 提供的所有内置原子 class 都可以配置</li>\n<li><strong>临时的设置</strong>可以用[]语法，但是页面太多，这样写不好维护和管理，还是建议使用统一的设计配置theme</li>\n<li>用  @apply 指令方式扩展原子 class</li>\n<li>用 @layer 扩展原子class</li>\n<li>用<strong>插件</strong>的方式扩展原子 class，跨项目的场景很适合</li>\n<li>用 <strong>prefix</strong> 来避免 class 名字冲突</li>\n<li>可以与 classnames 搭配使用</li>\n<li>我的项目是多人维护的，我如何保证原子化的样式类名称有一个比较合理的顺序呢？比如你喜欢先写宽高然后写定位，但是你的同事跟你相反，如何制定一个规范呢？<code class=\"language-text\">tailwindcss</code>提供了一个<code class=\"language-text\">prettier</code>插件<a href=\"https://link.juejin.cn?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fprettier-plugin-tailwindcss\" title=\"https://www.npmjs.com/package/prettier-plugin-tailwindcss\">prettier-plugin-tailwindcss</a>，可以通过安装插件并且配置保存后更新即可规范不同成员写样式类的格式化问题</li>\n</ol>\n<h3>关键</h3>\n<ol>\n<li>重用样式</li>\n<li>定制主题</li>\n<li>使用任意值</li>\n<li>使用CSS和@layer</li>\n<li>编写插件</li>\n</ol>\n<h3>配置</h3>\n<ol>\n<li>生产优化Tree-Shake</li>\n<li>rem默认模式配置成px模式, see [article](<a href=\"https://www.levenx.com/article/how-to-configure-the-default-unit-of-tailwindcss-is-px1#heading-1\">tailwindcss 如何配置默认单位为px - CSS|Tailwind CSS - 乐闻世界</a>)</li>\n</ol>\n<h3>注意事项</h3>\n<ol>\n<li>不要使用字符串连接来创建类名，因为在生产优化时，purgeCss 是通过正则匹配 html 类的属性，并不会解析 html，purgeCss 将不知道保存这些通过字符串连接的类。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 错误</span>\n<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">text-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token operator\">?</span><span class=\"token string\">'red'</span><span class=\"token operator\">:</span><span class=\"token string\">'green'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-600</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n<span class=\"token comment\">// 正确</span>\n<span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token operator\">?</span><span class=\"token string\">'text-red-600'</span><span class=\"token operator\">:</span><span class=\"token string\">'text-green-600'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<h3>tailwind css原理</h3>\n<p>tailwind 本质上就是个 postcss 插件。tailwind 就是基于 postcss 的 AST 实现的 css 代码生成工具，并且做了通过 extractor 提取 js、html 中 class 的功能。\ntailwind 还有种叫 JIT 的编译方式，这个原理也容易理解，本来是全部引入原子 css 然后过滤掉没有用到的，而 JIT 的话就是根据提取到的 class 来动态引入原子 css，更高效一点。</p>\n<h3>遇到的问题</h3>\n<ul>\n<li>PurgeCSS 有可能过多删除 class</li>\n<li>样式覆盖问题</li>\n</ul>\n<p>具体可以看[这篇文章](<a href=\"https://juejin.cn/post/7022810832379576357?searchId=2023121013432148778EA121C948C11E8F\">TailwindCSS 为什么这么好用？ - 掘金</a>)和[这篇文章](<a href=\"https://juejin.cn/post/6925734845062578184?searchId=2023121013432148778EA121C948C11E8F\">使用 Tailwind CSS 可能会遇到的问题及新方案 - 掘金</a>)</p>\n<ul>\n<li>tailwind有个问题是，在react里改了className会导致全局刷新，而改css文件只会更新页面样式而不会刷新。因为在react里改jsx感觉就是改js，导致重新编译。请问这个有解决方案吗</li>\n</ul>\n<h3>进阶使用</h3>\n<ul>\n<li>variant，您可以通过在 @variant 指令中包装它们的定义来生成响应式、hover, focus, active 和其他伪类。 see[ article](<a href=\"https://kendevlog.wordpress.com/2021/10/23/tailwind-variant/\">Tailwind Variant備註 – Kencoder 開發日誌</a>)</li>\n<li>responsive，通过将 class 的定义包装在 @responsive 指令中，您可以生成自己 class 的响应式</li>\n<li>theme()，使用 theme() 函数和 . 访问你的 Tailwind 配置值。</li>\n</ul>\n<h3>周边</h3>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss\">Tailwind CSS IntelliSense (vscode)</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3Dalfredbirk.tailwind-documentation\" title=\"https://marketplace.visualstudio.com/items?itemName=alfredbirk.tailwind-documentation\">Tailwind Documentation</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3Dstivo.tailwind-fold\" title=\"https://marketplace.visualstudio.com/items?itemName=stivo.tailwind-fold\">Tailwind Fold</a></li>\n<li><a href=\"https://link.juejin.cn/?target=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DKalimahApps.tailwind-config-viewer\" title=\"https://marketplace.visualstudio.com/items?itemName=KalimahApps.tailwind-config-viewer\">Tailwind Config Viewer</a> 在侧边栏中查看Tailwind CSS项目的配置</li>\n<li><a href=\"https://link.juejin.cn/?target=https%3A%2F%2Fplay.tailwindcss.com%2F\" title=\"https://play.tailwindcss.com/\">tailwindplay</a>：在线编辑器</li>\n<li><a href=\"https://link.juejin.cn/?target=https%3A%2F%2Fmertjf.github.io%2Ftailblocks%2F\" title=\"https://mertjf.github.io/tailblocks/\">tailblocks</a>：内涵大量模版</li>\n<li><a href=\"https://link.juejin.cn/?target=https%3A%2F%2Fwww.vue-tailwind.com%2F\" title=\"https://www.vue-tailwind.com/\">vue-tailwind</a>：一个 vue tailwind 组件库</li>\n</ul>\n<h3>awsome</h3>\n<p><a href=\"https://xxholly32.github.io/tailwind-learning/#/doc/Intro\">tailwind-learning</a>\n<a href=\"https://tailwindui.com/\">Tailwind UI - Official Tailwind CSS Components &#x26; Templates</a>\n<a href=\"https://wener.me/notes/web/style/tailwindcss/awesome\">TailwindCSS Awesome | Wener Live &#x26; Life</a>\n<a href=\"https://github.com/aniftyco/awesome-tailwindcss\">GitHub - aniftyco/awesome-tailwindcss: 😎 Awesome things related to Tailwind CSS</a></p>\n<h3>学习</h3>\n<ul>\n<li><a href=\"https://xxholly32.github.io/tailwind-learning/#/doc/Intro\">tailwind-learning</a></li>\n</ul>\n<p><strong>参考资料：</strong>\n<a href=\"https://juejin.cn/post/6902291855782707214?searchId=2023121013432148778EA121C948C11E8F\">深入浅出 tailwindcss - 掘金</a>\n<a href=\"https://juejin.cn/post/7231539903649398843?searchId=20231210120244BA5B6C0292B671B5022C\">快速掌握 Tailwind：最流行的原子化 CSS 框架 - 掘金</a>\n<a href=\"https://juejin.cn/post/6951300894684577823?searchId=2023121013432148778EA121C948C11E8F\">使用 Tailwind CSS 一年后，我的一些感受 - 掘金</a>\n<a href=\"https://juejin.cn/post/7200782261997338681?searchId=2023121013432148778EA121C948C11E8F\">TailwindCSS的使用，看这一篇就够了！ - 掘金</a>\n<a href=\"https://docs.popo.netease.com/lingxi/2fb40eef2fbf458385680a34c3993db9?xyz=1702263280208&#x26;appVersion=3.84.0&#x26;deviceType=4&#x26;popo_hidenativebar=1&#x26;popo_noindicator=1&#x26;disposable_login_token=1&#x26;xyz=1702263302245#edit\">tailwindCss配置集合 - POPO文档</a>\n<a href=\"https://milkmidi.medium.com/%E5%89%8D%E7%AB%AF%E5%A5%BD%E6%9C%8B%E5%8F%8B-tailwindcss-e1e187df6fed\">前端好朋友 — tailwindcss. 大家好，我是奶綠茶 | by Milk Midi | Medium</a>\n<a href=\"https://www.geeksforgeeks.org/how-to-setup-tailwind-3-in-react-with-cra-5/\">How to setup Tailwind 3 in React with CRA 5 ? - GeeksforGeeks</a></p>\n<p><a href=\"https://kms.netease.com/article/83752\">Tailwindcss的浅试和实践_网易KM</a>\n<a href=\"https://kms.netease.com/article/67074#%E5%88%87%E5%85%A5%E6%AD%A3%E9%A2%98\">关于tailwind使用过程中自己的一些感受与实践成果_网易KM</a></p>","frontmatter":{"title":"","date":null,"description":null}},"previous":{"fields":{"slug":"/new-beginnings/"},"frontmatter":{"title":"New Beginnings"}},"next":null},"pageContext":{"id":"630c83d8-ab10-56c6-8445-2a918839516d","previousPostId":"a65dcad8-af6e-5490-8cb7-11ab1784d9bf","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}